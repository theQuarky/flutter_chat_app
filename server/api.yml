openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
paths:
  /v1/users/insert:
    post:
      summary: Insert new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
  /v1/users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: Success
  /v1/users/get:
    get:
      summary: Get user by UID
      tags:
        - Users
      parameters:
        - in: query
          name: uid
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "400":
          description: Invalid or missing fields
        "404":
          description: User not found
        "500":
          description: Internal Server Error
  /v1/users/update:
    put:
      summary: Update user
      tags:
        - Users
      parameters:
        - in: query
          name: uid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
        "400":
          description: Invalid or missing UID
        "404":
          description: User not found
        "500":
          description: Internal Server Error
components:
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
          required: true
          unique: true
        displayName:
          type: string
          required: true
        gender:
          type: string
          enum:
            - male
            - female
          required: true
        dob:
          type: string
          format: date
          required: true
        deviceToken:
          type: string
          required: true
        friends:
          type: array
          items:
            type: object
        isActive:
          type: boolean
          default: true
        imageUrl:
          type: string
        isDeleted:
          type: boolean
          default: false
